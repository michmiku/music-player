{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Desktop\\\\port\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Sidebar.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst Sidebar = ({\n  musicList,\n  handleNewArtist,\n  setMyMusic,\n  setCurrentArtistPlaylist,\n  currentArtistPlaylist\n}) => {\n  const [artists, setArtists] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    let temp = [];\n    musicList.music.map(({\n      artist\n    }, key) => {\n      temp = [...temp, artist];\n      setArtists(temp);\n\n      if (key === musicList.music.length - 1) {\n        setLoaded(true);\n      }\n    });\n  }, [musicList]);\n\n  const handleMyMusic = () => {\n    setMyMusic(true);\n    setCurrentArtistPlaylist(\"favorite\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, !loaded ? /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"grow\",\n    variant: \"success\",\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"nav flex-column border-bottom border-secondary pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-ellipsis-v\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-secondary mt-3 ml-4\",\n    onClick: () => {\n      handleMyMusic();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, \"My Music\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"nav flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, [...new Set(artists)].map((artist, key) => currentArtistPlaylist === artist ? /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item artist-list-selected\",\n    key: key,\n    onClick: () => {\n      handleNewArtist(artist);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }, artist)) : /*#__PURE__*/React.createElement(\"li\", {\n    className: \"nav-item artist-list\",\n    key: key,\n    onClick: () => {\n      handleNewArtist(artist);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, artist))))));\n};\n\nexport default Sidebar;","map":{"version":3,"sources":["C:/Users/micha/Desktop/port/portfolio/portfolio/src/components/Sidebar.js"],"names":["React","useRef","useEffect","useState","Spinner","Sidebar","musicList","handleNewArtist","setMyMusic","setCurrentArtistPlaylist","currentArtistPlaylist","artists","setArtists","loaded","setLoaded","temp","music","map","artist","key","length","handleMyMusic","Set"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Sidebar = ({ musicList, handleNewArtist, setMyMusic, setCurrentArtistPlaylist, currentArtistPlaylist }) => {\r\n    const [artists, setArtists] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let temp = []\r\n        musicList.music.map(({ artist }, key) => {\r\n            temp = [...temp, artist]\r\n            setArtists(temp)\r\n            if (key === musicList.music.length - 1) {\r\n                setLoaded(true)\r\n            }\r\n        })\r\n    }, [musicList])\r\n\r\n    const handleMyMusic = () => {\r\n        setMyMusic(true)\r\n        setCurrentArtistPlaylist(\"favorite\")\r\n    }\r\n    return (\r\n\r\n        <div className=\"sidebar\">\r\n            {!loaded ?\r\n                <Spinner animation=\"grow\" variant=\"success\" className=\"spinner\" />\r\n                :\r\n                <div>\r\n                    <ul className=\"nav flex-column border-bottom border-secondary pb-3\">\r\n                        <li className=\"nav-item\">\r\n                            <i class=\"fas fa-ellipsis-v\"></i>\r\n                            <button type=\"button\" className=\"btn btn-outline-secondary mt-3 ml-4\" onClick={() => { handleMyMusic() }}>My Music</button>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"nav flex-column\">\r\n                        {[...new Set(artists)].map((artist, key) => (\r\n                            currentArtistPlaylist === artist ?\r\n                                <li className=\"nav-item artist-list-selected\" key={key} onClick={() => { handleNewArtist(artist) }}>\r\n                                    <a className=\"\">{artist}</a>\r\n                                </li> :\r\n                                <li className=\"nav-item artist-list\" key={key} onClick={() => { handleNewArtist(artist) }}>\r\n                                    <a className=\"\">{artist}</a>\r\n                                </li>\r\n                        ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n"]},"metadata":{},"sourceType":"module"}