{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Desktop\\\\port\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Music.js\";\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport { AuthenticatedUser } from \"../contexts/AuthenticatedUser.js\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Player from \"./Player.js\";\nimport Sidebar from \"./Sidebar.js\";\nimport MusicList from \"./MusicList.js\";\n\nconst Music = () => {\n  const [musicList, setMusicList] = useState({\n    music: []\n  });\n  const [src, setSrc] = useState('');\n  const [isPlaying, setIsPlaying] = useState({\n    playing: false\n  });\n  const [duration, setDuration] = useState({\n    duration: '',\n    rawDuration: ''\n  });\n  const [currentTime, setCurrentTime] = useState();\n  const [currentId, setCurrentId] = useState();\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\n  const [favoriteMusic, setFavoriteMusic] = useState([]);\n  const [myMusic, setMyMusic] = useState(false);\n  const [canUseArrows, setCanUseArrows] = useState(false);\n  const [repeat, setRepeat] = useState(false);\n  const [random, setRandom] = useState(false);\n  const [currentArtistPlaylist, setCurrentArtistPlaylist] = useState();\n  const [currentArtist, setCurrentArtist] = useState();\n  const {\n    authUser,\n    setAuthUser\n  } = useContext(AuthenticatedUser);\n  const player = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/music/').then(res => {\n      setMusicList({\n        music: res.data\n      });\n    }).catch(err => console.log(err));\n    axios.post('http://localhost:5000/music/favorite', authUser).then(res => {\n      let temp = [];\n      res.data.map(({\n        title\n      }) => {\n        temp = [...temp, title];\n        setFavoriteMusic(temp);\n      });\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    if (src !== '') {\n      player.current.load();\n      player.current.play();\n    }\n  }, [src]);\n\n  const handleTitleClick = (file, key, duration, rawDuration) => {\n    setSrc('http://localhost:5000/music/' + file);\n    setIsPlaying({\n      playing: true\n    });\n    setCurrentId(key);\n    setDuration({\n      duration: duration,\n      rawDuration: rawDuration\n    });\n    setCanUseArrows(true);\n    setCurrentArtist(currentArtistPlaylist);\n  };\n\n  const handlePlay = (file, key, duration, rawDuration) => {\n    if (src === '' && file === undefined) {} else if (src === 'http://localhost:5000/music/' + file || file === undefined) {\n      setIsPlaying({\n        playing: true\n      });\n      player.current.play();\n    } else {\n      setSrc('http://localhost:5000/music/' + file);\n      setIsPlaying({\n        playing: true\n      });\n      setCurrentId(key);\n      setDuration({\n        duration: duration,\n        rawDuration: rawDuration\n      });\n      setCanUseArrows(true);\n      setCurrentArtist(currentArtistPlaylist);\n    }\n  };\n\n  const handlePause = () => {\n    setIsPlaying({\n      playing: false\n    });\n    player.current.pause();\n  };\n\n  const handleProgress = () => {\n    setCurrentTime(player.current.currentTime);\n  };\n\n  const handleEnd = e => {\n    let id = currentId;\n\n    if (currentPlaylist.length < 2 && !random && !repeat) {\n      setCurrentTime(0);\n      setSrc('');\n      setCurrentId(null);\n      setDuration({\n        duration: '',\n        rawDuration: 0\n      });\n      setIsPlaying({\n        playing: false\n      });\n      player.current.load();\n      player.current.play();\n    } else if (random) {\n      if (currentPlaylist.length < 2) {\n        setCurrentTime(0);\n        player.current.load();\n        player.current.play();\n      } else {\n        while (id === currentId) {\n          id = Math.floor(Math.random() * currentPlaylist.length);\n        }\n\n        if (currentArtist === currentArtistPlaylist || myMusic && currentArtist === currentArtistPlaylist) {\n          setSrc('http://localhost:5000/music/' + currentPlaylist[id].file);\n          setCurrentId(id);\n          setDuration({\n            duration: currentPlaylist[id].duration,\n            rawDuration: currentPlaylist[id].rawDuration\n          });\n          setIsPlaying({\n            playing: true\n          });\n        }\n      }\n    } else if (repeat) {\n      setCurrentTime(0);\n      player.current.load();\n      player.current.play();\n    } else if (id < currentPlaylist.length - 1 && currentArtist === currentArtistPlaylist || id < currentPlaylist.length - 1 && myMusic && currentArtist === currentArtistPlaylist) {\n      setSrc('http://localhost:5000/music/' + currentPlaylist[id + 1].file);\n      setCurrentId(id + 1);\n      setDuration({\n        duration: currentPlaylist[id + 1].duration,\n        rawDuration: currentPlaylist[id + 1].rawDuration\n      });\n      setIsPlaying({\n        playing: true\n      });\n    }\n  };\n\n  const handleNewArtist = artist => {\n    let temp = musicList.music.filter(song => song.artist === artist);\n    setCurrentPlaylist(temp);\n    setMyMusic(false);\n    setCanUseArrows(false);\n    setCurrentArtistPlaylist(artist);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, authUser.username != '' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    musicList: musicList,\n    handleNewArtist: handleNewArtist,\n    setMyMusic: setMyMusic,\n    setCanUseArrows: setCanUseArrows,\n    setCurrentArtistPlaylist: setCurrentArtistPlaylist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(MusicList, {\n    musicList: musicList,\n    handleTitleClick: handleTitleClick,\n    handlePlay: handlePlay,\n    handlePause: handlePause,\n    isPlaying: isPlaying,\n    src: src,\n    authUser: authUser,\n    favoriteMusic: favoriteMusic,\n    setFavoriteMusic: setFavoriteMusic,\n    currentPlaylist: currentPlaylist,\n    myMusic: myMusic,\n    setCurrentPlaylist: setCurrentPlaylist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Player, {\n    isPlaying: isPlaying,\n    handlePlay: () => {\n      handlePlay();\n    },\n    handlePause: () => {\n      handlePause();\n    },\n    player: player,\n    src: src,\n    setSrc: setSrc,\n    duration: duration,\n    currentTime: currentTime,\n    musicList: currentPlaylist,\n    currentId: currentId,\n    setCurrentId: setCurrentId,\n    setDuration: setDuration,\n    setIsPlaying: setIsPlaying,\n    myMusic: myMusic,\n    canUseArrows: canUseArrows,\n    repeat: repeat,\n    setRepeat: setRepeat,\n    random: random,\n    setRandom: setRandom,\n    currentArtistPlaylist: currentArtistPlaylist,\n    currentArtist: currentArtist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: player,\n    onTimeUpdate: () => handleProgress(),\n    onEnded: () => {\n      handleEnd();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"You are not logged in!\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"In order to browse and listen to music you need to either login to your account or create a new one.\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    className: \"btn btn-primary mr-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \"btn btn-primary \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Register\")));\n};\n\nexport default Music;","map":{"version":3,"sources":["C:/Users/micha/Desktop/port/portfolio/portfolio/src/components/Music.js"],"names":["React","useState","useContext","useEffect","useRef","AuthenticatedUser","Link","axios","Player","Sidebar","MusicList","Music","musicList","setMusicList","music","src","setSrc","isPlaying","setIsPlaying","playing","duration","setDuration","rawDuration","currentTime","setCurrentTime","currentId","setCurrentId","currentPlaylist","setCurrentPlaylist","favoriteMusic","setFavoriteMusic","myMusic","setMyMusic","canUseArrows","setCanUseArrows","repeat","setRepeat","random","setRandom","currentArtistPlaylist","setCurrentArtistPlaylist","currentArtist","setCurrentArtist","authUser","setAuthUser","player","get","then","res","data","catch","err","console","log","post","temp","map","title","current","load","play","handleTitleClick","file","key","handlePlay","undefined","handlePause","pause","handleProgress","handleEnd","e","id","length","Math","floor","handleNewArtist","artist","filter","song","username"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { AuthenticatedUser } from \"../contexts/AuthenticatedUser.js\"\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Player from \"./Player.js\";\r\nimport Sidebar from \"./Sidebar.js\";\r\nimport MusicList from \"./MusicList.js\";\r\n\r\nconst Music = () => {\r\n    const [musicList, setMusicList] = useState({ music: [] })\r\n    const [src, setSrc] = useState('')\r\n    const [isPlaying, setIsPlaying] = useState({ playing: false })\r\n    const [duration, setDuration] = useState({ duration: '', rawDuration: '' })\r\n    const [currentTime, setCurrentTime] = useState()\r\n    const [currentId, setCurrentId] = useState()\r\n    const [currentPlaylist, setCurrentPlaylist] = useState([])\r\n    const [favoriteMusic, setFavoriteMusic] = useState([])\r\n    const [myMusic, setMyMusic] = useState(false)\r\n    const [canUseArrows, setCanUseArrows] = useState(false)\r\n    const [repeat, setRepeat] = useState(false)\r\n    const [random, setRandom] = useState(false)\r\n    const [currentArtistPlaylist, setCurrentArtistPlaylist] = useState()\r\n    const [currentArtist, setCurrentArtist] = useState()\r\n\r\n    const { authUser, setAuthUser } = useContext(AuthenticatedUser)\r\n\r\n    const player = useRef(null)\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/music/')\r\n            .then(res => {\r\n                setMusicList({ music: res.data })\r\n            })\r\n            .catch(err => console.log(err));\r\n        axios.post('http://localhost:5000/music/favorite', authUser)\r\n            .then(res => {\r\n                let temp = []\r\n                res.data.map(({ title }) => {\r\n                    temp = [...temp, title]\r\n                    setFavoriteMusic(temp)\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n    useEffect(() => {\r\n        if (src !== '') {\r\n            player.current.load()\r\n            player.current.play()\r\n        }\r\n\r\n    }, [src])\r\n\r\n    const handleTitleClick = (file, key, duration, rawDuration) => {\r\n        setSrc('http://localhost:5000/music/' + file)\r\n        setIsPlaying({ playing: true })\r\n        setCurrentId(key)\r\n        setDuration({ duration: duration, rawDuration: rawDuration })\r\n        setCanUseArrows(true)\r\n        setCurrentArtist(currentArtistPlaylist)\r\n    }\r\n    const handlePlay = (file, key, duration, rawDuration) => {\r\n        if (src === '' && file === undefined) { }\r\n        else if ((src === 'http://localhost:5000/music/' + file) || file === undefined) {\r\n            setIsPlaying({ playing: true })\r\n            player.current.play()\r\n        }\r\n        else {\r\n            setSrc('http://localhost:5000/music/' + file)\r\n            setIsPlaying({ playing: true })\r\n            setCurrentId(key)\r\n            setDuration({ duration: duration, rawDuration: rawDuration })\r\n            setCanUseArrows(true)\r\n            setCurrentArtist(currentArtistPlaylist)\r\n        }\r\n    }\r\n    const handlePause = () => {\r\n        setIsPlaying({ playing: false })\r\n        player.current.pause()\r\n    }\r\n    const handleProgress = () => {\r\n        setCurrentTime(player.current.currentTime)\r\n    }\r\n    const handleEnd = (e) => {\r\n        let id = currentId\r\n        if (currentPlaylist.length < 2 && !random && !repeat) {\r\n            setCurrentTime(0)\r\n            setSrc('')\r\n            setCurrentId(null)\r\n            setDuration({ duration: '', rawDuration: 0 })\r\n            setIsPlaying({ playing: false })\r\n            player.current.load()\r\n            player.current.play()\r\n        }\r\n        else if (random) {\r\n            if (currentPlaylist.length < 2) {\r\n                setCurrentTime(0)\r\n                player.current.load()\r\n                player.current.play()\r\n            }\r\n            else {\r\n                while (id === currentId) {\r\n                    id = Math.floor(Math.random() * (currentPlaylist.length))\r\n                }\r\n\r\n                if ((currentArtist === currentArtistPlaylist) || (myMusic && currentArtist === currentArtistPlaylist)) {\r\n                    setSrc('http://localhost:5000/music/' + currentPlaylist[id].file)\r\n                    setCurrentId(id)\r\n                    setDuration({ duration: currentPlaylist[id].duration, rawDuration: currentPlaylist[id].rawDuration })\r\n                    setIsPlaying({ playing: true })\r\n                }\r\n            }\r\n        }\r\n        else if (repeat) {\r\n            setCurrentTime(0)\r\n            player.current.load()\r\n            player.current.play()\r\n        }\r\n        else if ((id < currentPlaylist.length - 1 && currentArtist === currentArtistPlaylist) || (id < currentPlaylist.length - 1 && myMusic && currentArtist === currentArtistPlaylist)) {\r\n            setSrc('http://localhost:5000/music/' + currentPlaylist[id + 1].file)\r\n            setCurrentId(id + 1)\r\n            setDuration({ duration: currentPlaylist[id + 1].duration, rawDuration: currentPlaylist[id + 1].rawDuration })\r\n            setIsPlaying({ playing: true })\r\n        }\r\n    }\r\n    const handleNewArtist = (artist) => {\r\n        let temp = musicList.music.filter(song => song.artist === artist)\r\n        setCurrentPlaylist(temp)\r\n        setMyMusic(false)\r\n        setCanUseArrows(false)\r\n        setCurrentArtistPlaylist(artist)\r\n    }\r\n    return (\r\n        <div>\r\n            {authUser.username != '' ?\r\n                <div className=\"cont\">\r\n                    <Sidebar musicList={musicList} handleNewArtist={handleNewArtist} setMyMusic={setMyMusic} setCanUseArrows={setCanUseArrows} setCurrentArtistPlaylist={setCurrentArtistPlaylist} />\r\n                    <MusicList musicList={musicList} handleTitleClick={handleTitleClick} handlePlay={handlePlay} handlePause={handlePause} isPlaying={isPlaying} src={src} authUser={authUser} favoriteMusic={favoriteMusic} setFavoriteMusic={setFavoriteMusic} currentPlaylist={currentPlaylist} myMusic={myMusic} setCurrentPlaylist={setCurrentPlaylist} />\r\n                    <Player isPlaying={isPlaying} handlePlay={() => { handlePlay() }} handlePause={() => { handlePause() }} player={player} src={src} setSrc={setSrc} duration={duration} currentTime={currentTime} musicList={currentPlaylist} currentId={currentId} setCurrentId={setCurrentId} setDuration={setDuration} setIsPlaying={setIsPlaying} myMusic={myMusic} canUseArrows={canUseArrows} repeat={repeat} setRepeat={setRepeat} random={random} setRandom={setRandom} currentArtistPlaylist={currentArtistPlaylist} currentArtist={currentArtist} />\r\n                    <audio ref={player} onTimeUpdate={() => handleProgress()} onEnded={() => { handleEnd() }}>\r\n                        <source src={src} />\r\n                    </audio>\r\n                </div>\r\n\r\n                :\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">You are not logged in!</h5>\r\n                    <p className=\"card-text\">In order to browse and listen to music you need to either login to your account or create a new one.</p>\r\n                    <Link to=\"/login\" className=\"btn btn-primary mr-3 \">Login</Link>\r\n                    <Link to=\"/register\" className=\"btn btn-primary \">Register</Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n\r\n"]},"metadata":{},"sourceType":"module"}